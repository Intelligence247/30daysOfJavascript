// Exercise Three Starts Here
// Check the requirement of this project from both images(jpg and gif). All the data and CSS has been implemented using JavaScript only. The data is found on starter folder project_3. The drop down button has been created using details HTML element.

const asabenehChallenges2020 = {
  description: 'Asabeneh Yetayeh challenges',
  challengeTitle: 'Asabeneh Yetayeh challenges',
  challengeSubtitle: '30DaysOfJavaScript Challenge',
  challengeYear: 2020,
  keywords: [
    'HTML',
    'HTML5',
    'CSS',
    'CSS3',
    'JS',
    'JavaScript',
    'ES6',
    'Promise',
    'async await',
    'Database',
    'React',
    'React Hooks',
    'Context API',
    'React Router',
    'Web Storage',
    'localStorage',
    'sessionStorage',
    'Redux',
    'Node',
    'MongoDB',
    'SQL',
    'API',
    'DOM',
    'data science',
    'MERN',
    'Python',
    'Flask',
    'Statistics',
    'Linear Algebra',
    'Numpy',
    'Pandas',
    'Scipy',
    'Scikit-learn',
    'Visualization',
    'D3.js'
  ],
  author: {
    firstName: 'Asabeneh',
    lastName: 'Yetayeh',
    titles: [
      ['üå±', 'Educator'],
      ['üíª', 'Programmer'],
      ['üåê', 'Developer'],
      ['üî•', 'Motivator'],
      ['üìî', 'Content Creator']
    ],
    qualifications: [
      'MSc. Computer Science Ongoing',
      'BSc. Information and Communication Eng.',
      'MSc. Food Technology',
      'BSc.Food Technology'
    ],
    socialLinks: [
      {
        social: 'LinkedIn',
        url: 'https://www.linkedin.com/in/asabeneh/',
        fontawesomeIcon: '<i class="fab fa-linkedin">'
      },
      {
        social: 'Twitter',
        url: 'https://twitter.com/Asabeneh',
        fontawesomeIcon: '<i class="fab fa-twitter-square"></i>'
      },
      {
        social: 'Github',
        fontawesomeIcon: '<i class="fab fa-github-square"></i>',
        url: 'https://github.com/Asabeneh'
      },
      {
        social: 'DEV.to',
        fontawesomeIcon: '',
        url: 'https://dev.to/asabeneh'
      }
    ],
    skills: [
      'Web Development',
      'Data Analysis',
      'Data Visualization',
      'Programming',
      'Databases',
      'Developing API'
    ],
    bio:
      'I am an educator, developer, motivator and content creator. I am a life-long learner. If you like to know more about me checkout my LinkedIn or Github profile. Thank you so much for joining in my quest of changing everyone to developer.'
  },
  challenges: [
    {
      name: '30 Days Of Python',
      topics: [
        'Python',
        'Flask',
        'Numpy',
        'Pandas',
        'Statistics',
        'API',
        'MongoDB'
      ],
      days: 30,
      status: 'Done',
      questions: 'Above 500',
      projects: 'Two',
      interviewQns: '',
      githubUrl: 'https://github.com/Asabeneh/30-Days-Of-Python'
    },
    {
      name: '30 Days Of JavaScript',
      topics: ['JavaScript', 'ES6', 'Promise', 'async and await', 'DOM'],
      days: 30,
      status: 'Ongoing',
      questions: 'Above 500',
      projects: 'About 30',
      interviewQns: '',
      githubUrl: 'https://github.com/Asabeneh/30DaysOfJavaScript'
    },
    {
      name: '30 Days Of HTML & CSS',
      topics: ['CSS', 'Flex', 'Grid', 'CSS Animation'],
      days: 30,
      status: 'Coming',
      questions: 'Above 500',
      projects: 'Two',
      interviewQns: '',
      githubUrl: ''
    },
    {
      name: '30 Days Of React',
      topics: [
        'React',
        'React Router',
        'Redux',
        'Context API',
        'React Hooks',
        'MERN'
      ],
      days: 30,
      status: 'Coming',
      questions: '',
      projects: '',
      interviewQns: '',
      githubUrl: ''
    },
    {
      name: '30 Days Of ReactNative',
      topics: ['ReactNative', 'Redux'],
      days: 30,
      status: 'Coming',
      questions: '',
      projects: 'Two',
      interviewQns: '',
      githubUrl: ''
    },
    {
      name: '30 Days Of Fullstack',
      topics: ['React', 'Redux', 'MongoDB', 'Node', 'MERN'],
      days: 30,
      status: 'Coming',
      questions: '',
      projects: '',
      interviewQns: '',
      githubUrl: ''
    },
    {
      name: '30 Days Of Data Analysis',
      topics: ['Python', 'Numpy', 'Pandas', 'Statistics', 'Visualization'],
      days: 30,
      status: 'Coming',
      questions: '',
      projects: '',
      interviewQns: '',
      githubUrl: ''
    },
    {
      name: '30 Days Of Machine Learning',
      topics: [
        'Python',
        'Numpy',
        'Pandas',
        'Scikit-learn',
        'Scipy',
        'Linear Algebra',
        'Statistics',
        'Visualization'
      ],
      days: 30,
      status: 'Coming',
      questions: '',
      projects: '',
      interviewQns: '',
      githubUrl: ''
    }
  ]
}


const date = new Date
let mainP3 = document.createElement('main')
mainP3.textContent
document.body.appendChild(mainP3)
mainP3.style.width = 'max-content'
mainP3.style.height = 'max-content'
// mainP3.style.backgroundColor = 'blue'
mainP3.style.margin = 'auto'

let header
header = document.createElement('header')
header.style.width = 'max-content'
header.style.height = 'max-content'
header.style.margin = 'auto'
header.style.display = 'flex'
header.style.justifyContent = 'center'
header.style.alignItems = 'baseline'
header.style.gap = '1rem'
mainP3.appendChild(header)


let h1;
h1 = document.createElement('h1')
h1.textContent = 'Asabeneh Yetayeh challenges in'
header.appendChild(h1)



let random = '#' + Math.random().toString(16).substr(2, 6)
let span;
span = document.createElement('span')
span.textContent = date.getFullYear()
span.style.fontSize = '3rem'
span.style.display = 'inline-block'
const rand = () => {
    span.style.color = '#' + Math.random().toString(16).substr(2, 6)
}
rand()
setInterval(rand, 1000)
header.appendChild(span)

let h2 = document.createElement('h2')
h2.textContent = '30DaysOfJavaScript Challenge'
h2.style.textDecoration = 'underline'
h2.style.width = 'max-content'
h2.style.margin = 'auto'
mainP3.appendChild(h2)



let h3 = document.createElement('h3')
function funcDate() {
    let date = new Date
    h3.textContent = `${date.toLocaleDateString('month', { month: 'long' })} ${date.getDate()}, ${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`
}
funcDate()
setInterval(funcDate, 1000)
h3.style.width = 'max-content'
h3.style.margin = 'auto'
const backG = () => {
    h3.style.backgroundColor = '#' + Math.random().toString(16).substr(2, 6)
}
backG()
setInterval(backG, 1000)
h3.style.padding = '0.3rem'
h3.style.marginTop = '1rem'
mainP3.appendChild(h3)



let section
section = document.createElement('section')
let divs
for (let i = 0; i < 8; i++) {
    divs = document.createElement('div')
    divs.className = 'sect'
    divs.style.display = 'flex'
    divs.style.justifyContent = 'space-between'
    divs.style.alignItems = 'baseline'
    divs.style.backgroundColor = 'red'
    divs.style.padding = '0rem 1.5rem'
mainP3.appendChild(section)

    if (i == 0) {
        divs.style.backgroundColor = 'green'
        divs.style.marginTop = '2rem'
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of Python'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.textContent = 'Python'
        summary.style.cursor = 'pointer'
        details.appendChild(summary)

        let ps

        for (let i = 0; i < 7; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = 'Python'
            } else if (i == 1) {
                ps.textContent = 'Flask'
            } else if (i == 2) {
                ps.textContent = 'Numpy'
            } else if (i == 3) {
                ps.textContent = 'Pandas'
            } else if (i == 4) {
                ps.textContent = 'Statistic'
            } else if (i == 5) {
                ps.textContent = 'API'
            } else {
                ps.textContent = 'MongoDB'
            }
        }

        let p
        p = document.createElement('p')
        p.textContent = 'Done'
        divs.appendChild(p)
    } else if (i == 1) {
        divs.style.backgroundColor = 'yellow'
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of JavaScript'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'JavaScript'
        details.appendChild(summary)

        let ps

        for (let i = 0; i < 5; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i === 0) {
                ps.textContent = 'JavaScript'
            } else if (i === 1) {
                ps.textContent = 'ES6'
            } else if (i === 2) {
                ps.textContent = 'Promise'
            } else if (i === 3) {
                ps.textContent = 'async and await'
            } else {
                ps.textContent = 'DOM'
            }
        }

        let p
        p = document.createElement('p')
        p.textContent = 'Ongoing'
        divs.appendChild(p)
    } else if (i == 2) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of HTML & CSS'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'HTML & CSS'
        details.appendChild(summary)

        let ps

        for (let i = 0; i < 4; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i === 0) {
                ps.textContent = 'CSS'
            } else if (i === 1) {
                ps.textContent = 'Flex'
            } else if (i === 2) {
                ps.textContent = 'Grid'
            } else {
                ps.textContent = 'CSS Animation'
            }
        }

        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    } else if (i == 3) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of React'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'React'
        details.appendChild(summary)

        let ps
        for (let i = 0; i < 6; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = 'React'
            }else if(i==1){
              ps.textContent=asabenehChallenges2020.challenges[3].topics[1]
            }else if(i==2){
              ps.textContent=asabenehChallenges2020.challenges[3].topics[2]
            }else if(i==3){
              ps.textContent=asabenehChallenges2020.challenges[3].topics[3]
            }else if(i==4){
              ps.textContent=asabenehChallenges2020.challenges[3].topics[4]
            }else {
              ps.textContent=asabenehChallenges2020.challenges[3].topics[5]
            }
        }
console.log(asabenehChallenges2020.challenges[3].topics)
        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    } else if (i == 4) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of ReactNative'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'ReactNative'
        details.appendChild(summary)
  let ps
        for (let i = 0; i < 2; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = asabenehChallenges2020.challenges[4].topics[0]
            }else {
              ps.textContent=asabenehChallenges2020.challenges[4].topics[1]
            }
        }
console.log(asabenehChallenges2020.challenges[5].topics)
        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    } else if (i == 5) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of FullStack'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'Fullstack'
        details.appendChild(summary)

        let ps

        for (let i = 0; i < 5; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = asabenehChallenges2020.challenges[5].topics[0]
            }else if(i===1){
              ps.textContent = asabenehChallenges2020.challenges[5].topics[1]
            }else if(i===2){
              ps.textContent = asabenehChallenges2020.challenges[5].topics[2]
            }else if(i===3){
              ps.textContent = asabenehChallenges2020.challenges[5].topics[3]
            }else{
              ps.textContent = asabenehChallenges2020.challenges[5].topics[4]
            }
        }
        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    } else if (i == 6) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of Data Analysis'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'Data Analysis'
        details.appendChild(summary)

        let ps
console.log(asabenehChallenges2020.challenges[6].topics)
        for (let i = 0; i < 5; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = asabenehChallenges2020.challenges[6].topics[0]
            }else if(i===1){
              ps.textContent = asabenehChallenges2020.challenges[6].topics[1]
            }else if(i===2){
              ps.textContent = asabenehChallenges2020.challenges[6].topics[2]
            }else if(i===3){
              ps.textContent = asabenehChallenges2020.challenges[6].topics[3]
            }else{
              ps.textContent = asabenehChallenges2020.challenges[6].topics[4]
            }
        }

        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    } else if (i == 7) {
        divs.style.fontSize = '1rem'
        divs.style.borderBlock = '1.5px solid white'
        let h1
        h1 = document.createElement('h1')
        h1.textContent = '30 Days Of Machine Learning'
        h1.style.textDecoration = 'underline'
        h1.style.fontSize = '1rem'
        divs.appendChild(h1)

        let details
        details = document.createElement('details')
        divs.appendChild(details)
        let summary
        summary = document.createElement('summary')
        summary.style.cursor = 'pointer'
        summary.textContent = 'Machine Learning'
        details.appendChild(summary)

        let ps
        for (let i = 0; i < 7; i++) {
            ps = document.createElement('p')
            ps.style.cursor = 'pointer'
            details.appendChild(ps)
            if (i == 0) {
                ps.textContent = 'Python'
            } else if (i == 1) {
                ps.textContent = 'Numpy'
            } else if (i == 2) {
                ps.textContent = 'Pandas'
            } else if (i == 3) {
                ps.textContent = 'Scikit-learn'
            } else if (i == 4) {
                ps.textContent = 'Scipy'
            } else if (i == 5) {
                ps.textContent = 'Linear Algebra'
            } else {
                ps.textContent = 'Visualization'
            }
        }

        let p
        p = document.createElement('p')
        p.textContent = 'Coming'
        divs.appendChild(p)
    }
    section.appendChild(divs)
}




// Another project Starts here
// console.log(['Another project Starts here'])

let main2
main2=document.createElement('main')
main2.style.width='max-content'
main2.style.height='max-content'
main2.style.margin='auto'
main2.style.marginTop='5rem'
main2.style.marginBottom='10rem'
document.body.appendChild(main2)

let hOne
hOne=document.createElement('h1')
hOne.textContent='Asabeneh Yetayeh'
hOne.style.textAlign='center'
main2.appendChild(hOne)

let imgContainer
imgContainer=document.createElement('div')
imgContainer.className='imgs'
imgContainer.style.width='max-content'
imgContainer.style.margin='auto'
imgContainer.style.display='flex'
imgContainer.style.gap='0.5rem'
main2.appendChild(imgContainer)  


let img
img=document.createElement('img')
img.setAttribute('src', './media/linkd.png')
imgContainer.appendChild(img)

let img2
img2=document.createElement('img')
img2.setAttribute('src', './media/twitter.png')
imgContainer.appendChild(img2)

let img3
img3=document.createElement('img')
img3.setAttribute('src', './media/github.png')
imgContainer.appendChild(img3)

let about
about=document.createElement('p')
about.textContent='I am an educator, motivator and content creator. I am a life-long learner. If you like to know more about me checkout my LinkedIn or Github profile. Thank you so much for joining in my quest of changing everyone to developer'
about.style.width='37.8rem'
about.style.textAlign='center'
main2.appendChild(about)




let tsq
tsq=document.createElement('section')
tsq.style.display='flex'
tsq.style.width='max-content'
tsq.style.gap='3rem'
main2.appendChild(tsq)

let t
t=document.createElement('aside')
t.style.display='flex'
t.style.flexDirection='column'
t.style.gap='0'
t.style.margin='0'
t.style.padding='0'

tsq.appendChild(t)
 

 for(let i=0;i<6;i++){
     let tp=document.createElement('div')
     tp.style.display='flex'
    tp.style.alignItems='center'
    tp.style.gap='0.5rem'
    tp.style.height='1.5rem'
  t.appendChild(tp)
  if(i===0){
    tp.textContent='Titles'
    tp.style.fontWeight='900'
  }else if(i===1){
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'

    tp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Educator'
    tp.appendChild(p)

  }else if(i===2){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    tp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Programmer'
    tp.appendChild(p)

  }else if(i===3){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    tp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Developer'
    tp.appendChild(p)

  }else if(i===4){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    tp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Motivator'
    tp.appendChild(p)

  }else{
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    tp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Content Creator'
    tp.appendChild(p)

  }
 }



// Skills Starts here
let s
s=document.createElement('aside')
s.style.display='flex'
s.style.flexDirection='column'
s.style.gap='0'
tsq.appendChild(s)


for(let i=0;i<7;i++){
     let sp=document.createElement('div')
     sp.style.display='flex'
    sp.style.alignItems='center'
    sp.style.gap='0.5rem'
    sp.style.height='1.5rem'
  s.appendChild(sp)
  if(i===0){
    sp.textContent='Skills'
    sp.style.fontWeight='900'
  }else if(i===1){
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'

    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Web Development'
    sp.appendChild(p)

  }else if(i===2){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Data Analysis'
    sp.appendChild(p)

  }else if(i===3){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Data Visualization'
    sp.appendChild(p)

  }else if(i===4){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Programming'
    sp.appendChild(p)

  }else if(i===5){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Databases'
    sp.appendChild(p)

  }else{
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    sp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Developing API'
    sp.appendChild(p)
  }
 }

//  Qualifications starts Here


let q
q=document.createElement('aside')
q.style.display='flex'
q.style.flexDirection='column'
q.style.gap='0'
tsq.appendChild(q)

 for(let i=0;i<5;i++){
     let qp=document.createElement('div')
     qp.style.display='flex'
    qp.style.alignItems='center'
    qp.style.gap='0.5rem'
    qp.style.height='1.5rem'
  q.appendChild(qp)
  if(i===0){
    qp.textContent='Qualifications'
    qp.style.fontWeight='900'
  }else if(i===1){
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'

    qp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Msc. Computer Science Ongoing'
    qp.appendChild(p)

  }else if(i===2){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    qp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Bsc.Information and commnication Eng.'
    qp.appendChild(p)

  }else if(i===3){
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    qp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Msc.Food Technology'
    qp.appendChild(p)

  }else{
      
    let img
    img=document.createElement('img')
    img.setAttribute('src', './media/github.png')
    img.style.width='1rem'
    img.style.height='1rem'
    qp.appendChild(img)

    let p
    p=document.createElement('p')
    p.textContent='Bsc.Food Technology'
    qp.appendChild(p)

  }
 }


 

let kii
kii=document.createElement('p')
main2.appendChild(kii)
kii.textContent='Keywords'
kii.style.fontSize='2rem'
kii.style.fontWeight='800'
kii.style.marginBottom='-0.2rem' 
 

let footer
footer=document.createElement('footer')
footer.style.display='flex'
footer.style.flexWrap='wrap'
footer.style.width='44rem'
footer.style.gap='1rem'
footer.style.fontStyle='italic'
// footer.style.margin='auto'
footer.style.padding='0'
main2.appendChild(footer)
 for(let i=0;i<asabenehChallenges2020.keywords.length;i++){
 let kk=document.createElement('p')
kk.textContent='#'+' '+asabenehChallenges2020.keywords[i]
kk.style.width='max-content'
kk.style.height='max-content'
kk.style.fontSize='15px'
kk.style.marginBottom='-1rem'
const bgC=()=>{
  kk.style.backgroundColor='#'+Math.random().toString(16).substr(2,6)  
}
bgC()

// setInterval(bgC,1000)
// kk.style.transition='all 0.5s linear'
// kk.style.backgroundColor='blue'
kk.style.padding='0.5rem 1.5rem 0.5rem 0.5rem'
kk.style.borderRadius='50px'
footer.appendChild(kk)

 }
